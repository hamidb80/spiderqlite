
ask p-(p&q)->m
ask p-(p|q)->m

ask t<-(!c)
ask t<-c->p

#device      d
#utilized    u
#assigned_to a
#customer    b
#ordered     o

sort t.timestamp DESC
ask 
  :-!c->*t-a->p -- * means start query from here
  d-u->*t
  b-o->*t
  
return
  t p d b

#device d
#check_program cp

ask -- return all check programs of all devices
  d<-cp<-:

return d cp


ask p1-c->t 10 2
select t c

-- select p.name
-- delete 

update -- {data: ..} is in body
  .age   = .age + 1
  .state = |data|


-- insert data is sent in body as {m: ...}, {p: ...}

#movie    m 
#person   p
#acted_in a

insert p
insert m
insert p>-r->m


create index for nodes on data.title named what
-- create index what on nodes(json_extract(data, '$.title'))
list   indexes
fields #people

types edges -- list unique types of edges
types nodes -- list unique types of nodes

delete index of nodes named what
structure #person name age ...