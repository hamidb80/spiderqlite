[meta]
author   = "@hamidb80"
desc     = '''
'''

[config]
[config.frontend]
enabled  = true

[config.server]
host   = "0.0.0.0"
port   = 6001

[config.admin]
enabled  = true

[system]
[system.create_schema]
sql      = '''
  PRAGMA encoding="UTF-8";

  -- tables

  CREATE TABLE IF NOT EXISTS nodes (
      id          INTEGER PRIMARY KEY,
      tag         TEXT,
      doc         JSON NOT NULL
  );

  CREATE TABLE IF NOT EXISTS edges (
      id          INTEGER PRIMARY KEY,
      tag         TEXT,
      doc         JSON    DEFAULT '{}',
      source      INTEGER,
      target      INTEGER,

      FOREIGN KEY (source) REFERENCES nodes(id),
      FOREIGN KEY (target) REFERENCES nodes(id)
  );

  -- indexes

  CREATE INDEX IF NOT EXISTS node_index         ON nodes(id);
  CREATE INDEX IF NOT EXISTS node_tag_index     ON nodes(tag);

  CREATE INDEX IF NOT EXISTS edges_index        ON edges(id);
  CREATE INDEX IF NOT EXISTS edges_source_index ON edges(source);
  CREATE INDEX IF NOT EXISTS edges_target_index ON edges(target);
'''

[system.get_node]
sql      = '''
  SELECT |0|
  FROM   nodes n
  WHERE  id = |1|
'''

[system.get_edge]
sql      = '''
  SELECT |0|
  FROM   edges e
  WHERE  id = |1|
'''

[system.insert_node]
sql      = '''
  INSERT INTO
  nodes  (tag, doc) 
  VALUES (|0|, |1|)
'''

[system.insert_edge]
sql      = '''
  INSERT INTO
  edges  (tag, source, target, doc) 
  VALUES (|0|, |1|,    |2|,    |3|)
'''

[system.update_nodes]
sql      = '''
  UPDATE nodes
  SET    doc = |0|
  WHERE  id  = |1|
'''

[system.update_edges]
sql      = '''
  UPDATE edges
  SET    doc = |0|
  WHERE  id  = |1|
'''

[system.delete_nodes]
sql      = '''
  DELETE FROM nodes
  WHERE  id in (|nodes_ids|)
'''

[system.delete_edges]
sql      = '''
  DELETE FROM edges
  WHERE  id in (|edges_ids|)
'''

[system.delete_edges_of_nodes]
sql      = '''
  DELETE FROM edges
  WHERE
    source in (|nodes_ids|) OR
    target in (|nodes_ids|)
'''

[system.list_indexes]
sql      = '''
  SELECT name 
  FROM   sqlite_master 
  WHERE  type = 'index'
'''

[system.create_nodes_index]
sql      = '''
  CREATE |UNIQUE?|
  INDEX  |name| 
  ON 
    nodes
    (|index_expressions|)
'''

[system.create_edges_index]
sql      = '''
  CREATE |UNIQUE?|
  INDEX  |name| 
  ON 
    edges
    (|index_expressions|)
'''

[system.delete_indexes]
sql      = '''
  DROP INDEX 
  IF EXISTS
  |name|
'''

[[queries]]
key        = "single-node"
parameters = "a"
pattern    = "a"
selectable = "a"
sql        = '''
  SELECT 
    |select_fields|
  FROM
    nodes a
  WHERE 
    |check_node a|
  |group_statement|
  |having_statement|
  |order_statement|
  |limit_statement|
  |offset_statement|
'''
[[queries]]
key        = "single-edge-node-head"
parameters = "a b c"
pattern    = "^a>-c->b"
selectable = "a b c"
sql        = '''
  SELECT 
    |select_fields|
  FROM
    nodes a
  JOIN 
    edges c,
    nodes b
  ON
    |check_node b| AND
    |check_edge c a b|
  WHERE 
    |check_node a|
  |group_statement|
  |having_statement|
  |order_statement|
  |limit_statement|
  |offset_statement|
'''

[[queries]]
key        = "single-edge-edge"
parameters = "a b c"
pattern    = "a>-^c->b"
selectable = "a b c"
sql        = '''
  SELECT 
    |select_fields|
  FROM
    edges c
  JOIN 
    nodes a,
    nodes b
  ON
    |check_node a| AND
    |check_node b|
  WHERE 
    |check_edge c a b|
  |group_statement|
  |having_statement|
  |order_statement|
  |limit_statement|
  |offset_statement|
'''

[[queries]]
key        = "single-edge-node-tail"
parameters = "a b c"
pattern    = "a>-c->^b"
selectable = "a b c"
sql        = '''
  SELECT 
    |select_fields|
  FROM
    nodes b
  JOIN 
    edges c,
    nodes a
  ON
    |check_node a| AND
    |check_edge c a b|
  WHERE
    |check_node b|
  |group_statement|
  |having_statement|
  |order_statement|
  |limit_statement|
  |offset_statement|
'''

[[queries]]
key        = "2-nodes-2-way-inv-1"
parameters = "a b c1 c2"
pattern    = 'b>-c1->a<-!c2-<b'
selectable = "a b c1"
sql        = '''
  SELECT 
    |select_fields|
  FROM
    nodes a
  JOIN 
    edges c1,
    nodes b
  ON
        |check_node b|       AND
        |check_edge c1 a b|  AND
    NOT |exists_edge c2 a b|
  WHERE 
    |check_node a|
  |group_statement|
  |having_statement|
  |order_statement|
  |limit_statement|
  |offset_statement|
'''
